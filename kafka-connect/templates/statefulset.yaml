apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-connect
  namespace: sellio-infra
  labels:
    app.kubernetes.io/name: kafka-connect
spec:
  serviceName: kafka-connect
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka-connect
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka-connect
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      topologySpreadConstraints:
        {{- toYaml .Values.topologySpreadConstraints | nindent 8 }}
      containers:
        - name: connect
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http
              containerPort: 8083
          env:
            {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /connectors
              port: http
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 12
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: plugins
              mountPath: /usr/share/java/plugins
            - name: buffer
              mountPath: /buffer
  volumeClaimTemplates:
    - metadata:
        name: plugins
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.persistence.plugins.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.plugins.size | quote }}
    - metadata:
        name: buffer
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.persistence.buffer.storageClass | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.buffer.size | quote }}


