apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-backup
  namespace: sellio-data
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgresql-backup
  namespace: sellio-data
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: pgdump
              image: bitnami/postgresql:15
              imagePullPolicy: IfNotPresent
              env:
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgresql
                      key: postgres-password
                - name: PGUSER
                  value: "postgres"
                - name: PGHOST
                  value: "postgresql-primary"
              command:
                - /bin/bash
                - -ec
                - |
                  DATE=$(date +"%Y%m%d-%H%M%S")
                  pg_dumpall -h "$PGHOST" -U "$PGUSER" | gzip > /backup/sellio-pg-$DATE.sql.gz
                  find /backup -name 'sellio-pg-*.sql.gz' -type f -mtime +{{ .Values.backup.retentionDays }} -delete
              volumeMounts:
                - name: backup
                  mountPath: /backup
          volumes:
            - name: backup
              persistentVolumeClaim:
                claimName: postgresql-backup


